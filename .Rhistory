filter(padj<qvalue_drug)%>%
filter(grepl(gene_names,leadingEdge))%>%distinct()
}
###############
chem_tbl_filtered_selected<-chem_tbl_filtered%>%select(dataset,module,ES,sig_id)%>%distinct()
pheno_tbl_filtered<-pheno_tbl%>%
filter(p.value<pvalue_phenotypes)%>%
filter(q.value<qvalue_phenotypes)%>%
filter(Phenotypes%in%names(phenotype_direction))%>%distinct()
pheno_tbl_filtered_selected<-pheno_tbl_filtered%>%select(dataset,module,Phenotypes,estimate)%>%distinct()
#############################################
pheno_chem_tbl<-pheno_tbl_filtered_selected%>%
left_join(chem_tbl_filtered_selected)%>%
mutate(direction=ES*estimate)%>%
mutate(direction=case_when(direction>0~1,
direction==0~0,
direction<0~-1,
TRUE~0))
results_all_tbl<-data.frame()
for (i in 1:length(phenotype_direction)){
results_tbl<-pheno_chem_tbl%>%
filter(Phenotypes%in%names(phenotype_direction)[i])%>%
filter(direction==phenotype_direction[i])%>%mutate(effect_result="good")
results_all_tbl<-rbind(results_all_tbl,results_tbl)
}
for (i in 1:length(phenotype_direction)){
results_tbl<-pheno_chem_tbl%>%
filter(Phenotypes%in%names(phenotype_direction)[i])%>%
filter(direction==-phenotype_direction[i]&phenotype_direction[i]!=0)%>%mutate(effect_result="bad")
results_all_tbl<-rbind(results_all_tbl,results_tbl)
}
selected_perts<-results_all_tbl%>%left_join(pheno_tbl_filtered)%>%left_join(chem_tbl_filtered)%>%distinct()
dim(selected_perts)
#View(selected_perts)
##################################################################################################
##################################################################################################
# dgidb_df<-dgidb_tbl$results_summary
# dgidb_df_filter<-dgidb_df%>%filter(SearchTerm %in%gene_names_vector)%>%filter(Drug%in%unique(selected_perts$pert_iname))%>%select(Drug,SearchTerm)%>%
#   rename("pert_iname"="Drug")%>%group_by(pert_iname)%>%summarise(dgidb_freq=length(SearchTerm))
#
# head(dgidb_df_filter)
spg<-selected_perts%>%filter(effect_result=="good")%>%group_by(pert_iname)%>%summarise(freq_good=length(module))%>%mutate(freq_good=freq_good+1)
spb<-selected_perts%>%filter(effect_result=="bad")%>%group_by(pert_iname)%>%summarise(freq_bad=length(module))%>%mutate(freq_bad=freq_bad+1)
spgb<-spg%>%left_join(spb)%>%mutate(good_ratio=(freq_good)/(freq_good+freq_bad))%>%arrange(desc(good_ratio))%>%distinct()
fwrite(spgb,file=paste0("./results/",cancer_name,"_ranking.csv"))
}
mm<-fread("results/BLCA_ranking.csv")
mm2<-fread("results/LUSC_ranking.csv")
mm%>%left_join(mm2,by=c("pert_iname"))
mm<-fread("results/BLCA_ranking.csv")
mm
mm2<-fread("results/LUSC_ranking.csv")
mm2
cancer_names<-c("BLCA")
for (cancer_name in cancer_names){
print(cancer_name)
chem_tbl<-fread(file=paste0("drug_data/drug_tbl_SCC_sigbificant_",cancer_name,".csv"))
chem_tbl<-chem_tbl%>%filter(!grepl("BRD-",pert_iname))
chem_tbl<-chem_tbl%>%mutate(module=gsub("Module-","",pathway))
## Phenotype Table
# pheno_tbl<-readRDS("./GBM_phenotype_tests_all_GCO.rds")
pheno_tbl<-readRDS(paste0("../outputs/",cancer_name,"_phenotype_tests_all.rds"))
pheno_tbl<-AMARETTO::phenotye_add_estimate_column(pheno_tbl)
pheno_tbl<-pheno_tbl%>%mutate(module=gsub("Module ","",ModuleNr))
pheno_tbl$dataset<-paste0("TCGA_",cancer_name)
pheno_up<-paste0(unique(pheno_tbl$Phenotypes),"&1")
pheno_down<-paste0(unique(pheno_tbl$Phenotypes),"&-1")
phenos_choice_all<-c(pheno_up,pheno_down)
## AMARETTO Table
AMARETTOinit<-readRDS(paste0("../outputs/AMARETTOinit_",cancer_name,".rds"))
AMARETTOres<-readRDS(paste0("../outputs/AMARETTO_Results_",cancer_name,".rds"))
genes_tbl<-AMARETTO::genes_amaretto_assignments_all(AMARETTOinit,AMARETTOres)
## DGIdb Table
#dgidb_tbl<-DGIDB_gene_drug(unique(genes_tbl$Genes))
#saveRDS(dgidb_tbl,"dgidb_tbl.rds")
dgidb_tbl<-readRDS("./dgidb_tbl.rds")
#dgidb_tbl$results_summary
## Clinical Trial Table
clinical_trial_tbl<-readRDS("./clinical_trial_parsed_df.rds")
###########################
library(DBI)
#library(odbc)
library(dbplyr)
#gene_names_vector<-unique(genes_tbl$Genes)[1:10]
#gene_names_vector<-c("STAT3","MYC")
gene_names_vector<-unique(genes_tbl$Genes)[1:1000]
gene_names_vector<-c("all")
# gene_names_vector<-input$genes_leadingedge
gene_names<-paste(gene_names_vector,collapse="|")
#gene_names<-c("EGFR|STAT3")
# phenos_choice<-input$phenos_choice
phenos_choice<-phenos_choice_all[72]
phenotype_direction<-as.numeric(unlist(map(strsplit(phenos_choice,"&"),2)))
names(phenotype_direction)<-unlist(map(strsplit(phenos_choice,"&"),1))
phenotype_direction<-c("SurvivalTime (COXPROPHAZARDTIMETOEVENT), SurvivalCensoring (COXPROPHAZARDRIGHTCENSORING)"=-1)
# pvalue_drug<-input$pvalue_drug
# qvalue_drug<-input$qvalue_drug
# pvalue_phenotypes<-input$pvalue_phenotypes
# qvalue_phenotypes<-input$qvalue_phenotypes
pvalue_drug<-0.05
qvalue_drug<-0.25
pvalue_phenotypes<-0.25
qvalue_phenotypes<-1
###############
if(gene_names==c("all")){
chem_tbl_filtered<-chem_tbl%>%
filter(pval<pvalue_drug)%>%
filter(padj<qvalue_drug)%>%distinct()
}else{
chem_tbl_filtered<-chem_tbl%>%
filter(pval<pvalue_drug)%>%
filter(padj<qvalue_drug)%>%
filter(grepl(gene_names,leadingEdge))%>%distinct()
}
###############
chem_tbl_filtered_selected<-chem_tbl_filtered%>%select(dataset,module,ES,sig_id)%>%distinct()
pheno_tbl_filtered<-pheno_tbl%>%
filter(p.value<pvalue_phenotypes)%>%
filter(q.value<qvalue_phenotypes)%>%
filter(Phenotypes%in%names(phenotype_direction))%>%distinct()
pheno_tbl_filtered_selected<-pheno_tbl_filtered%>%select(dataset,module,Phenotypes,estimate)%>%distinct()
#############################################
pheno_chem_tbl<-pheno_tbl_filtered_selected%>%
left_join(chem_tbl_filtered_selected)%>%
mutate(direction=ES*estimate)%>%
mutate(direction=case_when(direction>0~1,
direction==0~0,
direction<0~-1,
TRUE~0))
results_all_tbl<-data.frame()
for (i in 1:length(phenotype_direction)){
results_tbl<-pheno_chem_tbl%>%
filter(Phenotypes%in%names(phenotype_direction)[i])%>%
filter(direction==phenotype_direction[i])%>%mutate(effect_result="good")
results_all_tbl<-rbind(results_all_tbl,results_tbl)
}
for (i in 1:length(phenotype_direction)){
results_tbl<-pheno_chem_tbl%>%
filter(Phenotypes%in%names(phenotype_direction)[i])%>%
filter(direction==-phenotype_direction[i]&phenotype_direction[i]!=0)%>%mutate(effect_result="bad")
results_all_tbl<-rbind(results_all_tbl,results_tbl)
}
selected_perts<-results_all_tbl%>%left_join(pheno_tbl_filtered)%>%left_join(chem_tbl_filtered)%>%distinct()
dim(selected_perts)
#View(selected_perts)
##################################################################################################
##################################################################################################
# dgidb_df<-dgidb_tbl$results_summary
# dgidb_df_filter<-dgidb_df%>%filter(SearchTerm %in%gene_names_vector)%>%filter(Drug%in%unique(selected_perts$pert_iname))%>%select(Drug,SearchTerm)%>%
#   rename("pert_iname"="Drug")%>%group_by(pert_iname)%>%summarise(dgidb_freq=length(SearchTerm))
#
# head(dgidb_df_filter)
spg<-selected_perts%>%filter(effect_result=="good")%>%group_by(pert_iname)%>%summarise(freq_good=length(module))%>%mutate(freq_good=freq_good+1)
spb<-selected_perts%>%filter(effect_result=="bad")%>%group_by(pert_iname)%>%summarise(freq_bad=length(module))%>%mutate(freq_bad=freq_bad+1)
spgb<-spg%>%left_join(spb)%>%mutate(good_ratio=(freq_good)/(freq_good+freq_bad))%>%arrange(desc(good_ratio))%>%distinct()
fwrite(spgb,file=paste0("./results/",cancer_name,"_ranking.csv"))
}
mm<-fread("results/BLCA_ranking.csv")
mm
mm2<-fread("results/LUSC_ranking.csv")
mm2
mm%>%left_join(mm2,by=c("pert_iname"))
mm_all<-mm%>%
left_join(mm2,by=c("pert_iname"))%>%
left_join(mm3,by=c("pert_iname"))%>%
left_join(mm4,by=c("pert_iname"))%>%
left_join(mm5,by=c("pert_iname"))
mm2<-fread("results/HNSC_ranking.csv")
mm3<-fread("results/CESC_ranking.csv")
mm4<-fread("results/ESCA_ranking.csv")
mm5<-fread("results/LUSC_ranking.csv")
mm_all<-mm%>%
left_join(mm2,by=c("pert_iname"))%>%
left_join(mm3,by=c("pert_iname"))%>%
left_join(mm4,by=c("pert_iname"))%>%
left_join(mm5,by=c("pert_iname"))
View(mm_all)
mm<-fread("results/BLCA_ranking.csv")
mm
mm<-fread("results/BLCA_ranking.csv")
mm2<-fread("results/HNSC_ranking.csv")
mm3<-fread("results/CESC_ranking.csv")
mm4<-fread("results/ESCA_ranking.csv")
mm5<-fread("results/LUSC_ranking.csv")
mm_all<-mm%>%rename("good_ratio_BLCA")%>%
left_join(mm2%>%rename("good_ratio_HNSC"),by=c("pert_iname"))%>%
left_join(mm3%>%rename("good_ratio_CESC"),by=c("pert_iname"))%>%
left_join(mm4%>%rename("good_ratio_ESCA"),by=c("pert_iname"))%>%
left_join(mm5%>%rename("good_ratio_LUSC"),by=c("pert_iname"))
mm_all<-mm%>%rename("good_ratio_BLCA"="good_ratio")%>%
left_join(mm2%>%rename("good_ratio_HNSC"="good_ratio"),by=c("pert_iname"))%>%
left_join(mm3%>%rename("good_ratio_CESC"="good_ratio"),by=c("pert_iname"))%>%
left_join(mm4%>%rename("good_ratio_ESCA"="good_ratio"),by=c("pert_iname"))%>%
left_join(mm5%>%rename("good_ratio_LUSC"="good_ratio"),by=c("pert_iname"))
View(mm_all)
mm_all<-mm_all%>%mutate(good_ratio_All_mean=mean(good_ratio_BLCA,
good_ratio_HNSC,
good_ratio_CESC,
good_ratio_ESCA,
good_ratio_LUSC))%>%order_by(good_ratio_All_mean)
mm_all<-mm_all%>%mutate(good_ratio_All_mean=mean(good_ratio_BLCA,
good_ratio_HNSC,
good_ratio_CESC,
good_ratio_ESCA,
good_ratio_LUSC))
ff<-mean(mm_all$good_ratio_BLCA,
mm_all$good_ratio_BLCA,
mm_all$good_ratio_BLCA,
mm_all$good_ratio_BLCA,
mm_all$good_ratio_BLCA)
mm_all$good_ratio_BLCA
View(mm_all)
summary(mm_all$good_ratio_BLCA)
help(mean)
help("mean")
mm_all<-mm_all%>%drop_na()
mm_all<-mm_all%>%mutate(good_ratio_All_mean=mean(good_ratio_BLCA,
good_ratio_HNSC,
good_ratio_CESC,
good_ratio_ESCA,
good_ratio_LUSC))
summary(mm_all$good_ratio_BLCA)
ff<-mean(mm_all$good_ratio_BLCA,
mm_all$good_ratio_BLCA,
mm_all$good_ratio_BLCA,
mm_all$good_ratio_BLCA,
mm_all$good_ratio_BLCA)
mm_all<-mm_all%>%drop_na()
mm_all<-mm_all%>%mutate(good_ratio_All_mean=rowMeans(good_ratio_BLCA,
good_ratio_HNSC,
good_ratio_CESC,
good_ratio_ESCA,
good_ratio_LUSC))
mm_all<-mm_all%>%mutate(good_ratio_All_mean=rowMeans(c("good_ratio_BLCA",
"good_ratio_HNSC",
"good_ratio_CESC",
"good_ratio_ESCA",
"good_ratio_LUSC")))
ff<-mean(mm_all$good_ratio_BLCA,
mm_all$good_ratio_HNSC,
mm_all$good_ratio_CESC,
mm_all$good_ratio_ESCA,
mm_all$good_ratio_LUSC)
mm_all<-mm_all%>%drop_na()
ff<-mean(mm_all$good_ratio_BLCA,
mm_all$good_ratio_HNSC,
mm_all$good_ratio_CESC,
mm_all$good_ratio_ESCA,
mm_all$good_ratio_LUSC)
summary(mm_all)
is.na(mm_all)
sum(is.na(mm_all))
ff<-mean(mm_all$good_ratio_BLCA,
mm_all$good_ratio_HNSC,
mm_all$good_ratio_CESC,
mm_all$good_ratio_ESCA,
mm_all$good_ratio_LUSC)
ff<-mean(mm_all$good_ratio_BLCA,
mm_all$good_ratio_HNSC)
mm_all$good_ratio_BLCA
mm_all$good_ratio_HNSC
mm_all$mean_all <- rowMeans(subset(mm_all, select = c(good_ratio_BLCA,
good_ratio_HNSC,
good_ratio_CESC,
good_ratio_ESCA,
good_ratio_LUSC)), na.rm = TRUE)
mm_all<-mm_all%>%order_by(mean_all)
View(mm_all)
mm_all<-mm%>%rename("good_ratio_BLCA"="good_ratio")%>%
left_join(mm2%>%rename("good_ratio_HNSC"="good_ratio"),by=c("pert_iname"))%>%
left_join(mm3%>%rename("good_ratio_CESC"="good_ratio"),by=c("pert_iname"))%>%
left_join(mm4%>%rename("good_ratio_ESCA"="good_ratio"),by=c("pert_iname"))%>%
left_join(mm5%>%rename("good_ratio_LUSC"="good_ratio"),by=c("pert_iname"))
mm_all<-mm_all%>%drop_na()
mm_all<-mm_all%>%mutate(good_ratio_All_mean=rowMeans(c("good_ratio_BLCA",
"good_ratio_HNSC",
"good_ratio_CESC",
"good_ratio_ESCA",
"good_ratio_LUSC")))
mm_all$mean_all <- rowMeans(subset(mm_all, select = c(good_ratio_BLCA,
good_ratio_HNSC,
good_ratio_CESC,
good_ratio_ESCA,
good_ratio_LUSC)), na.rm = TRUE)
mm_all<-mm_all%>%arrange(desc(mean_all))
View(mm_all)
mm_all$median_all <- rowMeds(subset(mm_all, select = c(good_ratio_BLCA,
good_ratio_HNSC,
good_ratio_CESC,
good_ratio_ESCA,
good_ratio_LUSC)), na.rm = TRUE)
mm_all$median_all <- rowMedians(subset(mm_all, select = c(good_ratio_BLCA,
good_ratio_HNSC,
good_ratio_CESC,
good_ratio_ESCA,
good_ratio_LUSC)), na.rm = TRUE)
help("rowMeans")
mm_all$median_all <- rowMedians(subset(mm_all, select = c(good_ratio_BLCA,
good_ratio_HNSC,
good_ratio_CESC,
good_ratio_ESCA,
good_ratio_LUSC)), na.rm = TRUE)
install.packages("matrixStats")
install.packages("matrixStats")
library(matrixStats)
mm_all$median_all <- rowMedians(subset(mm_all, select = c(good_ratio_BLCA,
good_ratio_HNSC,
good_ratio_CESC,
good_ratio_ESCA,
good_ratio_LUSC)), na.rm = TRUE)
subset(mm_all, select = c(good_ratio_BLCA,
good_ratio_HNSC,
good_ratio_CESC,
good_ratio_ESCA,
good_ratio_LUSC)
)
help("rowMeans")
mm_all$median_all <- rowMaxs(subset(mm_all, select = c(good_ratio_BLCA,
good_ratio_HNSC,
good_ratio_CESC,
good_ratio_ESCA,
good_ratio_LUSC)), na.rm = TRUE)
mm_all<-mm_all%>%mutate(median_all=median(good_ratio_BLCA,good_ratio_HNSC))
mm_all<-mm_all%>%mutate(median_all=median(good_ratio_BLCA,good_ratio_HNSC,na.rm = TRUE))
mm_all$median_all
mm_all<-mm_all%>%mutate(median_all=median(good_ratio_BLCA,
good_ratio_HNSC,
good_ratio_CESC,
good_ratio_ESCA,
good_ratio_LUSC,
na.rm = TRUE))
View(mm_all)
mm_all$mean_all <- apply(subset(mm_all, select = c(good_ratio_BLCA,
good_ratio_HNSC,
good_ratio_CESC,
good_ratio_ESCA,
good_ratio_LUSC)), 1, median)
mm_all$mean_all <- rowMeans(subset(mm_all, select = c(good_ratio_BLCA,
good_ratio_HNSC,
good_ratio_CESC,
good_ratio_ESCA,
good_ratio_LUSC)), na.rm = TRUE)
mm_all$median_all <- apply(subset(mm_all, select = c(good_ratio_BLCA,
good_ratio_HNSC,
good_ratio_CESC,
good_ratio_ESCA,
good_ratio_LUSC)), 1, median)
mm_all$median_all
mm_all<-mm_all%>%arrange(desc(mean_all))
View(mm_all)
fwrite(mm_all,"./results/overall_scores.csv")
mm_all%>%column_to_rownames(pert_iname)%>%select(c(good_ratio_BLCA,
good_ratio_HNSC,
good_ratio_CESC,
good_ratio_ESCA,
good_ratio_LUSC))
View(mm_all)
mm_all%>%column_to_rownames("pert_iname")%>%select(c(good_ratio_BLCA,
good_ratio_HNSC,
good_ratio_CESC,
good_ratio_ESCA,
good_ratio_LUSC))
gg<-mm_all%>%column_to_rownames("pert_iname")%>%select(c(good_ratio_BLCA,
good_ratio_HNSC,
good_ratio_CESC,
good_ratio_ESCA,
good_ratio_LUSC))
as.matrix(gg)
heatmap(gg)
gg<-as.matrix(gg)
heatmap(gg)
help(heatmap)
heatmap.2(gg,dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none')
install.packages("gplots")
library(gplots)
heatmap.2(gg,dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none')
heatmap(gg)
heatmap(gg[1:1000,])
heatmap(gg[1:1000,])
heatmap(gg[1:100,])
gg[1:100,]
heatmap(gg[1:10,])
heatmap(gg[1:50,])
heatmap(gg[1:100,])
heatmap(gg[1:50,])
pdf("./results/heatmap.pdf",width=24,height=8)
heatmap(gg[1:100,])
dev.off()
pdf("./results/heatmap.pdf",width=24,height=80)
heatmap(gg[1:100,])
dev.off()
pdf("./results/heatmap.pdf",width=12,height=50)
heatmap(gg[1:100,])
dev.off()
pdf("./results/heatmap.pdf",width=12,height=70)
heatmap(gg[1:1000,])
dev.off()
pdf("./results/heatmap.pdf",width=12,height=70)
heatmap(gg[1:1000,])
dev.off()
pdf("./results/heatmap.pdf",width=70,height=70)
heatmap(gg[1:1000,])
dev.off()
pdf("./results/heatmap.pdf",width=70,height=70)
heatmap(gg[1:500,])
dev.off()
pdf("./results/heatmap.pdf",width=70,height=70)
heatmap(gg[1:100,])
dev.off()
pdf("./results/heatmap.pdf",width=712,height=70)
heatmap(gg[1:100,])
dev.off()
pdf("./results/heatmap.pdf",width=12,height=70)
heatmap(gg[1:100,])
dev.off()
pdf("./results/heatmap.pdf",width=12,height=30)
heatmap(gg[1:100,])
dev.off()
TCGA_LIHC_data<-CommunityAMARETTO::TCGA_LIHC_data
library(CommunityAMARETTO)
install.packages("/Users/mohsennabian/Documents/GitHub/CommunityAMARETTO",repos = NULL, type = "source")
install.packages("/Users/mohsennabian/Documents/GitHub/CommunityAMARETTO",repos = NULL, type = "source")
install.packages("/Users/mohsennabian/Documents/GitHub/CommunityAMARETTO",repos = NULL, type = "source")
setwd("~/Documents/GitHub/draft/cAMARETTO_Package_Prepration")
# BioCheck PACKAGE ---------------------------------------------------
#BiocManager::install("Bioconductor/BiocCheck")
#setwd("../CommunityAMARETTO")
setwd("../../CommunityAMARETTO")
devtools::document()
install.packages("/Users/mohsennabian/Documents/GitHub/CommunityAMARETTO",repos = NULL, type = "source",dependencies = c("Depends", "Suggests"))
install.packages("/Users/mohsennabian/Documents/GitHub/CommunityAMARETTO", dependencies = c("Depends", "Suggests"))
install.packages("/Users/mohsennabian/Documents/GitHub/CommunityAMARETTO",repos = NULL, dependencies = c("Depends", "Suggests"))
install.packages("/Users/mohsennabian/Documents/GitHub/CommunityAMARETTO",type = "source", dependencies = c("Depends", "Suggests"))
install.packages("/Users/mohsennabian/Documents/GitHub/CommunityAMARETTO", dependencies = c("Depends", "Suggests"),force=TRUE)
install.packages("R.utils")
install.packages("randomcoloR")
install.packages("rlist")
install.packages("/Users/mohsennabian/Documents/GitHub/CommunityAMARETTO",repos = NULL, type = "source")
install.packages("igraph")
install.packages("/Users/mohsennabian/Documents/GitHub/CommunityAMARETTO",repos = NULL, type = "source")
library(CommunityAMARETTO)
context("CommunityAMARETTO output data objects testing")
TCGA_LIHC_data<-CommunityAMARETTO::TCGA_LIHC_data
library(CommunityAMARETTO)
CommunityAMARETTO::TCGA_LIHC_data
library(CommunityAMARETTO)
data("TCGA_LIHC_data")
data("CCLE_Liver_data")
AMARETTOresults_all<-list(TCGA_LIHC=TCGA_LIHC_data$AMARETTO_Results,
CCLE_Liver=CCLE_Liver_data$AMARETTO_Results)
cAMARETTOresults<-CommunityAMARETTO::cAMARETTO_Results(AMARETTOresults_all,
gmt_filelist=NULL,
NrCores = 4,
output_dir = ".",
drivers=TRUE)
cAMARETTOresults<-cAMARETTO_Results(AMARETTOresults_all,
gmt_filelist=NULL,
NrCores = 4,
output_dir = ".",
drivers=TRUE)
TCGA_LIHC_data$AMARETTO_Results
CommunityAMARETTO:::.packageName
CommunityAMARETTO::
cAMARETTOresults<-cAMARETTO_Results(AMARETTOresults_all,
gmt_filelist=NULL,
NrCores = 4,
output_dir = ".",
drivers=TRUE)
detach("package:CommunityAMARETTO", unload=TRUE)
remove.packages("CommunityAMARETTO")
install.packages("/Users/mohsennabian/Documents/GitHub/CommunityAMARETTO",repos = NULL, type = "source")
library(CommunityAMARETTO)
CommunityAMARETTO::cAMARETTO_Results(AMARETTOresults_all,
gmt_filelist=NULL,
NrCores = 4,
output_dir = ".",
drivers=TRUE)
devtools::document()
detach("package:CommunityAMARETTO", unload=TRUE)
remove.packages("CommunityAMARETTO")
install_github("broadinstitute/CommunityAMARETTO",ref='develop',force = 'TRUE')
library(devtools)
install_github("broadinstitute/CommunityAMARETTO",ref='develop',force = 'TRUE')
library(CommunityAMARETTO)
devtools::document()
#devtools::use_mit_license()
devtools::check()
install.packages("NCmisc")
#devtools::use_mit_license()
devtools::check()
devtools::document()
#devtools::use_mit_license()
devtools::check()
library(BiocCheck)
install.packages("BiocCheck")
BiocManager::install("BiocStyle")
BiocManager::install("BiocCheck")
library(BiocCheck)
#devtools::use_mit_license()
devtools::check()
devtools::document()
#devtools::use_mit_license()
devtools::check()
#devtools::use_mit_license()
devtools::check()
#devtools::use_mit_license()
devtools::check()
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
tinytex::reinstall_tinytex()
options(tinytex.verbose = TRUE)
tinytex::reinstall_tinytex()
